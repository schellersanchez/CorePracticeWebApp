@model CorePracticeWebApp.ViewModels.MemberVm
@{
    ViewData["Title"] = "MemberForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Member.FirstName @Model.Member.LastName</h2>
@if (!String.IsNullOrEmpty(Model.PageMessage))
{
    <div class="alert alert-primary" role="alert">
        @Model.PageMessage;
    </div>
}

<div class="row">
    @using (Html.BeginForm(Model.ViewMode, "Member", FormMethod.Post))
    {
        <div class="col-lg-12">
            <div class="hiddenFields">
                @Html.HiddenFor(m => m.Member.Id)
                @Html.HiddenFor(m => m.Member.IsActive)
                @Html.HiddenFor(m => m.ViewMode)
            </div>
            <div class="col-lg-6">
                @Html.LabelFor(m => m.Member.FirstName)
                @Html.TextBoxFor(m => m.Member.FirstName, new { @class = "form-control ", @required = "true" })
            </div>
            <div class="col-lg-6">
                @Html.LabelFor(m => m.Member.LastName)
                @Html.TextBoxFor(m => m.Member.LastName, new { @class = "form-control ", @required = "true" })
            </div>
            <div class="col-lg-6">
                @Html.LabelFor(m => m.Member.StreetAddress)
                @Html.TextBoxFor(m => m.Member.StreetAddress, new { @class = "form-control ", @required = "true" })
            </div>
            <div class="col-lg-6">
                @Html.LabelFor(m => m.Member.City)
                @Html.TextBoxFor(m => m.Member.City, new { @class = "form-control ", @required = "true" })
            </div>
            <div class="col-lg-6">
                @Html.LabelFor(m => m.Member.State)
                @Html.TextBoxFor(m => m.Member.State, new { @class = "form-control ", @required = "true" })
            </div>
            <div class="col-lg-6">
                @Html.LabelFor(m => m.Member.Country)
                @Html.TextBoxFor(m => m.Member.Country, new { @class = "form-control", @required = "true" })
            </div>
            <div class="col-lg-6">
                @Html.LabelFor(m => m.Member.DateOfBirth)
                @Html.TextBoxFor(m => m.Member.DateOfBirth, new { @class = "form-control datePicker", @required = "true" })
            </div>
            <div class="col-lg-6">
                @Html.LabelFor(m => m.Member.DateofBap)
                @Html.TextBoxFor(m => m.Member.DateofBap, new { @class = "form-control datePicker", @required = "true" })
            </div>
            <div class="col-lg-12" style="padding:5px">
                <center>
                    <button class="btn btn-default addBtn">Add Member</button>
                    <button class="btn btn-success updateBtn">Update Member</button>
                    <a href="#" class="btn btn-danger deleteBtn" role="button" aria-pressed="true">Delete</a>
                    <a href="#" class="btn btn-default cancelBtn" role="button" aria-pressed="true">Cancel</a>
                    <a href= "#" class="btn btn-primary printBtn" role="button" aria-pressed="true">Print</a>
                    <a href="#" class="btn btn-default editBtn" role="button" aria-pressed="true">Edit</a>
                </center>
            </div>


        </div>


    }
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $(".datePicker").datepicker();
            var viewMode = $('#ViewMode').val();

            switch (viewMode) {
                case "readonly":
                    $(".form-control").attr("disabled", "disabled");
                    $(".addBtn").hide();
                    $(".updateBtn").hide();
                    break;
                case "edit":
                    $(".form-control").attr("disabled", "disabled");
                    $(".addBtn").hide();
                    $('.updateBtn').hide();
                    $('.deleteBtn').hide();
                    $('.cancelBtn').hide();
                    break;
                case "add":
                    $(".updateBtn").hide();
                    $('.printBtn').hide();
                    $('.editBtn').hide();
                    $('.deleteBtn').hide();
                    break;
                default:
                    //dosomething
                    break;
            }

            $('.editBtn').click(function () {
                $(".form-control").removeAttr("disabled");
                $('.editBtn').hide();
                $('.printBtn').hide();
                $('.updateBtn').show();
                $('.deleteBtn').show();
                $('.cancelBtn').show();
            });
            $('.cancelBtn').click(function () {
                $(".form-control").attr("disabled", "disabled");
                $('.editBtn').show();
                $('.printBtn').show();
                $('.updateBtn').hide();
                $('.deleteBtn').hide();
                $('.cancelBtn').hide();
            });
            $('.deleteBtn').click(function () {
                var member = @Html.Raw(Json.Serialize(@Model.Member));
                if (confirm("Are you sure you want to delete?")) {
                    $.ajax({
                        method: "POST",
                        data: member,
                        url: '@Url.Action("Delete","Member", new { @Model.Member.Id})',
                        success: function (result) {
                            window.location.href = '@Url.Action("Manage","Member")';
                        }
                    });
                }
                else {
                    return false;

                }
            });
            $('.printBtn').click(function () {
                window.location.href = '@Url.Action("GetPdf", "Member", new { @Model.Member.Id })'
            });


        });
    </script>
}


